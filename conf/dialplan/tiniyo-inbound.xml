<?xml version="1.0"?>
<!--
    NOTICE:
    This context is usually accessed via the external sip profile listening on port 5080.
    
    It is recommended to have separate inbound and outbound contexts.  Not only for security
    but clearing up why you would need to do such a thing.  You don't want outside un-authenticated
    callers hitting your default context which allows dialing calls thru your providers and results 
    in Toll Fraud.
-->
<!-- http://wiki.freeswitch.org/wiki/Dialplan_XML -->
<include>
	<context name="tiniyo_inbound">
		<!-- Destination is sip -->
		<extension name="from_kamailio_to_udp_tcp">
			<condition field="${sip_h_X-Proto}" expression="^(UDP|TCP|TLS|tcp|udp|tls)$">
				<action application="log" data="INFO Inbound call CallUUID ${call_uuid} SIPCallID ${sip_call_id}- from ${caller_id_number} to ${destination_number}" />
				<action application="set" data="sip_ignore_183nosdp=true" />
				<action application="set" data="rtp_use_dtls=false" />
				<action application="set" data="webrtc_enable_dtls=true" />
				<action application="set" data="tiniyo_destination=Sip"/>
				<action application="set" data="park_timeout=86400"/>
                                <action application="export" data="rtcp_mux=true"/>
                               	<action application="export" data="rtcp_audio_interval_msec=5000"/>
                                <action application="export" data="hangup_after_bridge=true"/>
                                <action application="set" data="sofia_session_timeout=0"/>
                                <action application="set" data="send_silence_when_idle=-1"/>
				<action application="park"/>
			</condition>
		</extension>
		<!-- Destination is webrtc -->
		<extension name="from_kamailio_to_webrtc">
			<condition field="${sip_h_X-Proto}" expression="^(ws|wss|WS|WSS)$">
				<action application="log" data="INFO Inbound call CallUUID ${call_uuid} SIPCallID ${sip_call_id} - from ${caller_id_number} to ${destination_number}" />
				<action application="set" data="sip_ignore_183nosdp=true" />
				<action application="set" data="webrtc_enable_dtls=true" />
				<action application="set" data="sofia_session_timeout=0" />
				<action application="set" data="tiniyo_destination=Wss"/>
                                <action application="set" data="park_timeout=86400"/>
                                <action application="export" data="rtcp_mux=true"/>
                                <action application="export" data="rtcp_audio_interval_msec=5000"/>
                                <action application="export" data="hangup_after_bridge=true"/>
                                <action application="set" data="sofia_session_timeout=0"/>
                                <action application="set" data="send_silence_when_idle=-1"/>
				<action application="park"/>
			</condition>
		</extension>
		<!-- Destination is conference -->
		<!-- Here need to identify the source of call like udp/tcp/tls/ws/wss -->
		<extension name="conference">
			<condition field="${sip_h_X-Conference}" expression="^(true)$">
				<action application="set" data="tiniyo_destination=Conf"/>
				<action application="set" data="park_timeout=86400"/>
				<action application="export" data="rtcp_mux=true"/>
				<action application="export" data="rtcp_audio_interval_msec=5000"/>
				<action application="export" data="hangup_after_bridge=false"/>
				<action application="set" data="sofia_session_timeout=0"/>
				<action application="set" data="send_silence_when_idle=-1"/>
				<action application="park"/>
			</condition>
		</extension>
		<!-- Destination is phone-number -->
		<extension name="public_did">
			<condition field="destination_number" expression="^(\*\*)?(\+?)\d+$">
				<action application="set" data="tiniyo_destination=Pstn"/>
				<action application="set" data="park_timeout=86400"/>
				<action application="export" data="rtcp_mux=false"/>
				<action application="export" data="rtcp_audio_interval_msec=5000"/>
				<action application="export" data="hangup_after_bridge=true"/>
				<action application="set" data="sofia_session_timeout=0"/>
				<action application="set" data="send_silence_when_idle=-1"/>
				<action application="park"/>
			</condition>
		</extension>
	</context>
</include>
